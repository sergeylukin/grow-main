{"ast":null,"code":"import { cloneArr, cloneObj, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values } from \"../../../utils/utils\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException } from \"../../exceptions_public\";\nimport { PROD_TYPE } from \"../../grammar/lookahead\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker } from \"../../grammar/interpreter\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable\";\nimport { EOF } from \"../../../scan/tokens_public\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories } from \"../../../scan/tokens\";\nimport { classNameFromInstance } from \"../../../lang/lang_extensions\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\n\nvar RecognizerEngine =\n/** @class */\nfunction () {\n  function RecognizerEngine() {}\n\n  RecognizerEngine.prototype.initRecognizerEngine = function (tokenVocabulary, config) {\n    this.className = classNameFromInstance(this); // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n\n    this.shortRuleNameToFull = {};\n    this.fullRuleNameToShort = {};\n    this.ruleShortNameIdx = 256;\n    this.tokenMatcher = tokenStructuredMatcherNoCategories;\n    this.definedRulesNames = [];\n    this.tokensMap = {};\n    this.isBackTrackingStack = [];\n    this.RULE_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n    this.gastProductionsCache = {};\n\n    if (has(config, \"serializedGrammar\")) {\n      throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" + \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" + \"\\tFor Further details.\");\n    }\n\n    if (isArray(tokenVocabulary)) {\n      // This only checks for Token vocabularies provided as arrays.\n      // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n      // rather than all edge cases of empty Token vocabularies.\n      if (isEmpty(tokenVocabulary)) {\n        throw Error(\"A Token Vocabulary cannot be empty.\\n\" + \"\\tNote that the first argument for the parser constructor\\n\" + \"\\tis no longer a Token vector (since v4.0).\");\n      }\n\n      if (typeof tokenVocabulary[0].startOffset === \"number\") {\n        throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" + \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" + \"\\tFor Further details.\");\n      }\n    }\n\n    if (isArray(tokenVocabulary)) {\n      this.tokensMap = reduce(tokenVocabulary, function (acc, tokType) {\n        acc[tokType.name] = tokType;\n        return acc;\n      }, {});\n    } else if (has(tokenVocabulary, \"modes\") && every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n      var allTokenTypes = flatten(values(tokenVocabulary.modes));\n      var uniqueTokens = uniq(allTokenTypes);\n      this.tokensMap = reduce(uniqueTokens, function (acc, tokType) {\n        acc[tokType.name] = tokType;\n        return acc;\n      }, {});\n    } else if (isObject(tokenVocabulary)) {\n      this.tokensMap = cloneObj(tokenVocabulary);\n    } else {\n      throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" + \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n    } // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n    // parsed with a clear error message (\"expecting EOF but found ...\")\n\n    /* tslint:disable */\n\n\n    this.tokensMap[\"EOF\"] = EOF; // TODO: This check may not be accurate for multi mode lexers\n\n    var noTokenCategoriesUsed = every(values(tokenVocabulary), function (tokenConstructor) {\n      return isEmpty(tokenConstructor.categoryMatches);\n    });\n    this.tokenMatcher = noTokenCategoriesUsed ? tokenStructuredMatcherNoCategories : tokenStructuredMatcher; // Because ES2015+ syntax should be supported for creating Token classes\n    // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n    // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n\n    augmentTokenTypes(values(this.tokensMap));\n  };\n\n  RecognizerEngine.prototype.defineRule = function (ruleName, impl, config) {\n    if (this.selfAnalysisDone) {\n      throw Error(\"Grammar rule <\" + ruleName + \"> may not be defined after the 'performSelfAnalysis' method has been called'\\n\" + \"Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.\");\n    }\n\n    var resyncEnabled = has(config, \"resyncEnabled\") ? config.resyncEnabled : DEFAULT_RULE_CONFIG.resyncEnabled;\n    var recoveryValueFunc = has(config, \"recoveryValueFunc\") ? config.recoveryValueFunc : DEFAULT_RULE_CONFIG.recoveryValueFunc; // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n    // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n\n    /* tslint:disable */\n\n    var shortName = this.ruleShortNameIdx << BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX;\n    /* tslint:enable */\n\n    this.ruleShortNameIdx++;\n    this.shortRuleNameToFull[shortName] = ruleName;\n    this.fullRuleNameToShort[ruleName] = shortName;\n\n    function invokeRuleWithTry(args) {\n      try {\n        if (this.outputCst === true) {\n          impl.apply(this, args);\n          var cst = this.CST_STACK[this.CST_STACK.length - 1];\n          this.cstPostRule(cst);\n          return cst;\n        } else {\n          return impl.apply(this, args);\n        }\n      } catch (e) {\n        return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n      } finally {\n        this.ruleFinallyStateUpdate();\n      }\n    }\n\n    var wrappedGrammarRule;\n\n    wrappedGrammarRule = function wrappedGrammarRule(idxInCallingRule, args) {\n      if (idxInCallingRule === void 0) {\n        idxInCallingRule = 0;\n      }\n\n      this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule);\n      return invokeRuleWithTry.call(this, args);\n    };\n\n    var ruleNamePropName = \"ruleName\";\n    wrappedGrammarRule[ruleNamePropName] = ruleName;\n    wrappedGrammarRule[\"originalGrammarAction\"] = impl;\n    return wrappedGrammarRule;\n  };\n\n  RecognizerEngine.prototype.invokeRuleCatch = function (e, resyncEnabledConfig, recoveryValueFunc) {\n    var isFirstInvokedRule = this.RULE_STACK.length === 1; // note the reSync is always enabled for the first rule invocation, because we must always be able to\n    // reSync with EOF and just output some INVALID ParseTree\n    // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n    // path is really the most valid one\n\n    var reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n\n    if (isRecognitionException(e)) {\n      var recogError = e;\n\n      if (reSyncEnabled) {\n        var reSyncTokType = this.findReSyncTokenType();\n\n        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n          recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n\n          if (this.outputCst) {\n            var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            return partialCstResult;\n          } else {\n            return recoveryValueFunc();\n          }\n        } else {\n          if (this.outputCst) {\n            var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            recogError.partialCstResult = partialCstResult;\n          } // to be handled Further up the call stack\n\n\n          throw recogError;\n        }\n      } else if (isFirstInvokedRule) {\n        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n        this.moveToTerminatedState(); // the parser should never throw one of its own errors outside its flow.\n        // even if error recovery is disabled\n\n        return recoveryValueFunc();\n      } else {\n        // to be recovered Further up the call stack\n        throw recogError;\n      }\n    } else {\n      // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n      throw e;\n    }\n  }; // Implementation of parsing DSL\n\n\n  RecognizerEngine.prototype.optionInternal = function (actionORMethodDef, occurrence) {\n    var key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n    return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n  };\n\n  RecognizerEngine.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {\n    var _this = this;\n\n    var lookAheadFunc = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE; // predicate present\n\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_1 = lookAheadFunc;\n\n        lookAheadFunc = function lookAheadFunc() {\n          return predicate.call(_this) && orgLookaheadFunction_1.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      return action.call(this);\n    }\n\n    return undefined;\n  };\n\n  RecognizerEngine.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef) {\n    var laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n    return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  };\n\n  RecognizerEngine.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n    var _this = this;\n\n    var lookAheadFunc = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE; // predicate present\n\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_2 = lookAheadFunc;\n\n        lookAheadFunc = function lookAheadFunc() {\n          return predicate.call(_this) && orgLookaheadFunction_2.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      var notStuck = this.doSingleRepetition(action);\n\n      while (lookAheadFunc.call(this) === true && notStuck === true) {\n        notStuck = this.doSingleRepetition(action);\n      }\n    } else {\n      throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n    } // note that while it may seem that this can cause an error because by using a recursive call to\n    // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n    // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n    this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n  };\n\n  RecognizerEngine.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options) {\n    var laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n    this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n  };\n\n  RecognizerEngine.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, key) {\n    var _this = this;\n\n    var action = options.DEF;\n    var separator = options.SEP;\n    var firstIterationLookaheadFunc = this.getLaFuncFromCache(key); // 1st iteration\n\n    if (firstIterationLookaheadFunc.call(this) === true) {\n      ;\n      action.call(this); //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n      //  because it is only needed in error recovery scenarios.\n\n      var separatorLookAheadFunc = function separatorLookAheadFunc() {\n        return _this.tokenMatcher(_this.LA(1), separator);\n      }; // 2nd..nth iterations\n\n\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        action.call(this);\n      } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n      this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, NextTerminalAfterAtLeastOneSepWalker], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n    } else {\n      throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n    }\n  };\n\n  RecognizerEngine.prototype.manyInternal = function (prodOccurrence, actionORMethodDef) {\n    var laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n    return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  };\n\n  RecognizerEngine.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n    var _this = this;\n\n    var lookaheadFunction = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE; // predicate present\n\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_3 = lookaheadFunction;\n\n        lookaheadFunction = function lookaheadFunction() {\n          return predicate.call(_this) && orgLookaheadFunction_3.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    var notStuck = true;\n\n    while (lookaheadFunction.call(this) === true && notStuck === true) {\n      notStuck = this.doSingleRepetition(action);\n    } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n    this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n    // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n    // An infinite loop cannot occur as:\n    // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n    // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n    notStuck);\n  };\n\n  RecognizerEngine.prototype.manySepFirstInternal = function (prodOccurrence, options) {\n    var laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n    this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n  };\n\n  RecognizerEngine.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, key) {\n    var _this = this;\n\n    var action = options.DEF;\n    var separator = options.SEP;\n    var firstIterationLaFunc = this.getLaFuncFromCache(key); // 1st iteration\n\n    if (firstIterationLaFunc.call(this) === true) {\n      action.call(this);\n\n      var separatorLookAheadFunc = function separatorLookAheadFunc() {\n        return _this.tokenMatcher(_this.LA(1), separator);\n      }; // 2nd..nth iterations\n\n\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator); // No need for checking infinite loop here due to consuming the separator.\n\n        action.call(this);\n      } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n      this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, NextTerminalAfterManySepWalker], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n    }\n  };\n\n  RecognizerEngine.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n    while (separatorLookAheadFunc()) {\n      // note that this CONSUME will never enter recovery because\n      // the separatorLookAheadFunc checks that the separator really does exist.\n      this.CONSUME(separator);\n      action.call(this);\n    } // we can only arrive to this function after an error\n    // has occurred (hence the name 'second') so the following\n    // IF will always be entered, its possible to remove it...\n    // however it is kept to avoid confusion and be consistent.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n    /* istanbul ignore else */\n\n\n    this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n  };\n\n  RecognizerEngine.prototype.doSingleRepetition = function (action) {\n    var beforeIteration = this.getLexerPosition();\n    action.call(this);\n    var afterIteration = this.getLexerPosition(); // This boolean will indicate if this repetition progressed\n    // or if we are \"stuck\" (potential infinite loop in the repetition).\n\n    return afterIteration > beforeIteration;\n  };\n\n  RecognizerEngine.prototype.orInternal = function (altsOrOpts, occurrence) {\n    var laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n    var alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n    var laFunc = this.getLaFuncFromCache(laKey);\n    var altIdxToTake = laFunc.call(this, alts);\n\n    if (altIdxToTake !== undefined) {\n      var chosenAlternative = alts[altIdxToTake];\n      return chosenAlternative.ALT.call(this);\n    }\n\n    this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n  };\n\n  RecognizerEngine.prototype.ruleFinallyStateUpdate = function () {\n    this.RULE_STACK.pop();\n    this.RULE_OCCURRENCE_STACK.pop(); // NOOP when cst is disabled\n\n    this.cstFinallyStateUpdate();\n\n    if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n      var firstRedundantTok = this.LA(1);\n      var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n        firstRedundant: firstRedundantTok,\n        ruleName: this.getCurrRuleFullName()\n      });\n      this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n    }\n  };\n\n  RecognizerEngine.prototype.subruleInternal = function (ruleToCall, idx, options) {\n    var ruleResult;\n\n    try {\n      var args = options !== undefined ? options.ARGS : undefined;\n      ruleResult = ruleToCall.call(this, idx, args);\n      this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined ? options.LABEL : ruleToCall.ruleName);\n      return ruleResult;\n    } catch (e) {\n      this.subruleInternalError(e, options, ruleToCall.ruleName);\n    }\n  };\n\n  RecognizerEngine.prototype.subruleInternalError = function (e, options, ruleName) {\n    if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n      this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined ? options.LABEL : ruleName);\n      delete e.partialCstResult;\n    }\n\n    throw e;\n  };\n\n  RecognizerEngine.prototype.consumeInternal = function (tokType, idx, options) {\n    var consumedToken;\n\n    try {\n      var nextToken = this.LA(1);\n\n      if (this.tokenMatcher(nextToken, tokType) === true) {\n        this.consumeToken();\n        consumedToken = nextToken;\n      } else {\n        this.consumeInternalError(tokType, nextToken, options);\n      }\n    } catch (eFromConsumption) {\n      consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n    }\n\n    this.cstPostTerminal(options !== undefined && options.LABEL !== undefined ? options.LABEL : tokType.name, consumedToken);\n    return consumedToken;\n  };\n\n  RecognizerEngine.prototype.consumeInternalError = function (tokType, nextToken, options) {\n    var msg;\n    var previousToken = this.LA(0);\n\n    if (options !== undefined && options.ERR_MSG) {\n      msg = options.ERR_MSG;\n    } else {\n      msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: tokType,\n        actual: nextToken,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName()\n      });\n    }\n\n    throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n  };\n\n  RecognizerEngine.prototype.consumeInternalRecovery = function (tokType, idx, eFromConsumption) {\n    // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n    // but the original syntax could have been parsed successfully without any backtracking + recovery\n    if (this.recoveryEnabled && // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n    eFromConsumption.name === \"MismatchedTokenException\" && !this.isBackTracking()) {\n      var follows = this.getFollowsForInRuleRecovery(tokType, idx);\n\n      try {\n        return this.tryInRuleRecovery(tokType, follows);\n      } catch (eFromInRuleRecovery) {\n        if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n          // failed in RuleRecovery.\n          // throw the original error in order to trigger reSync error recovery\n          throw eFromConsumption;\n        } else {\n          throw eFromInRuleRecovery;\n        }\n      }\n    } else {\n      throw eFromConsumption;\n    }\n  };\n\n  RecognizerEngine.prototype.saveRecogState = function () {\n    // errors is a getter which will clone the errors array\n    var savedErrors = this.errors;\n    var savedRuleStack = cloneArr(this.RULE_STACK);\n    return {\n      errors: savedErrors,\n      lexerState: this.exportLexerState(),\n      RULE_STACK: savedRuleStack,\n      CST_STACK: this.CST_STACK\n    };\n  };\n\n  RecognizerEngine.prototype.reloadRecogState = function (newState) {\n    this.errors = newState.errors;\n    this.importLexerState(newState.lexerState);\n    this.RULE_STACK = newState.RULE_STACK;\n  };\n\n  RecognizerEngine.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {\n    this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n    this.RULE_STACK.push(shortName); // NOOP when cst is disabled\n\n    this.cstInvocationStateUpdate(fullName, shortName);\n  };\n\n  RecognizerEngine.prototype.isBackTracking = function () {\n    return this.isBackTrackingStack.length !== 0;\n  };\n\n  RecognizerEngine.prototype.getCurrRuleFullName = function () {\n    var shortName = this.getLastExplicitRuleShortName();\n    return this.shortRuleNameToFull[shortName];\n  };\n\n  RecognizerEngine.prototype.shortRuleNameToFullName = function (shortName) {\n    return this.shortRuleNameToFull[shortName];\n  };\n\n  RecognizerEngine.prototype.isAtEndOfInput = function () {\n    return this.tokenMatcher(this.LA(1), EOF);\n  };\n\n  RecognizerEngine.prototype.reset = function () {\n    this.resetLexerState();\n    this.isBackTrackingStack = [];\n    this.errors = [];\n    this.RULE_STACK = []; // TODO: extract a specific reset for TreeBuilder trait\n\n    this.CST_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n  };\n\n  return RecognizerEngine;\n}();\n\nexport { RecognizerEngine };","map":{"version":3,"mappings":"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","names":["cloneArr","cloneObj","every","flatten","has","isArray","isEmpty","isObject","reduce","uniq","values","AT_LEAST_ONE_IDX","AT_LEAST_ONE_SEP_IDX","BITS_FOR_METHOD_TYPE","BITS_FOR_OCCURRENCE_IDX","MANY_IDX","MANY_SEP_IDX","OPTION_IDX","OR_IDX","isRecognitionException","MismatchedTokenException","NotAllInputParsedException","PROD_TYPE","NextTerminalAfterAtLeastOneSepWalker","NextTerminalAfterAtLeastOneWalker","NextTerminalAfterManySepWalker","NextTerminalAfterManyWalker","DEFAULT_RULE_CONFIG","IN_RULE_RECOVERY_EXCEPTION","EOF","augmentTokenTypes","isTokenType","tokenStructuredMatcher","tokenStructuredMatcherNoCategories","classNameFromInstance","RecognizerEngine","tokenVocabulary","config","className","shortRuleNameToFull","fullRuleNameToShort","ruleShortNameIdx","tokenMatcher","definedRulesNames","tokensMap","isBackTrackingStack","RULE_STACK","RULE_OCCURRENCE_STACK","gastProductionsCache","Error","startOffset","acc","tokType","name","modes","allTokenTypes","uniqueTokens","noTokenCategoriesUsed","tokenConstructor","categoryMatches","ruleName","impl","selfAnalysisDone","resyncEnabled","recoveryValueFunc","shortName","invokeRuleWithTry","args","outputCst","apply","cst","CST_STACK","length","cstPostRule","e","invokeRuleCatch","ruleFinallyStateUpdate","wrappedGrammarRule","idxInCallingRule","ruleInvocationStateUpdate","call","ruleNamePropName","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","isBackTracking","recoveryEnabled","recogError","reSyncTokType","findReSyncTokenType","isInCurrentRuleReSyncSet","resyncedTokens","reSyncTo","partialCstResult","recoveredNode","moveToTerminatedState","actionORMethodDef","occurrence","key","getKeyForAutomaticLookahead","optionInternalLogic","lookAheadFunc","getLaFuncFromCache","action","predicate","DEF","undefined","GATE","orgLookaheadFunction_1","_this","prodOccurrence","laKey","atLeastOneInternalLogic","orgLookaheadFunction_2","notStuck","doSingleRepetition","raiseEarlyExitException","REPETITION_MANDATORY","ERR_MSG","attemptInRepetitionRecovery","atLeastOneInternal","options","atLeastOneSepFirstInternalLogic","separator","SEP","firstIterationLookaheadFunc","separatorLookAheadFunc","LA","CONSUME","repetitionSepSecondInternal","REPETITION_MANDATORY_WITH_SEPARATOR","manyInternalLogic","lookaheadFunction","orgLookaheadFunction_3","manyInternal","manySepFirstInternalLogic","firstIterationLaFunc","nextTerminalAfterWalker","beforeIteration","getLexerPosition","afterIteration","altsOrOpts","alts","laFunc","altIdxToTake","chosenAlternative","ALT","raiseNoAltException","pop","cstFinallyStateUpdate","isAtEndOfInput","firstRedundantTok","errMsg","errorMessageProvider","buildNotAllInputParsedMessage","firstRedundant","getCurrRuleFullName","SAVE_ERROR","ruleToCall","idx","ruleResult","ARGS","cstPostNonTerminal","LABEL","subruleInternalError","consumedToken","nextToken","consumeToken","consumeInternalError","eFromConsumption","consumeInternalRecovery","cstPostTerminal","msg","previousToken","buildMismatchTokenMessage","expected","actual","previous","follows","getFollowsForInRuleRecovery","tryInRuleRecovery","eFromInRuleRecovery","savedErrors","errors","savedRuleStack","lexerState","exportLexerState","newState","importLexerState","fullName","push","cstInvocationStateUpdate","getLastExplicitRuleShortName","resetLexerState"],"sourceRoot":"","sources":["../../../../../src/parse/parser/traits/recognizer_engine.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}