{"ast":null,"code":"import _objectSpread from\"/Users/sergey/code/grow/pres2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/sergey/code/grow/pres2/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"color\",\"shift\",\"opacity\",\"args\",\"map\"];import React,{forwardRef,useRef}from\"react\";import{useFrame}from\"@react-three/fiber\";import lerp from\"lerp\";import\"./CustomMaterial\";import{useBlock}from\"../blocks\";import state from\"../store\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Plane=/*#__PURE__*/forwardRef(function(_ref,ref){var _ref$color=_ref.color,color=_ref$color===void 0?\"white\":_ref$color,_ref$shift=_ref.shift,shift=_ref$shift===void 0?1:_ref$shift,_ref$opacity=_ref.opacity,opacity=_ref$opacity===void 0?1:_ref$opacity,args=_ref.args,map=_ref.map,props=_objectWithoutProperties(_ref,_excluded);var _useBlock=useBlock(),viewportHeight=_useBlock.viewportHeight,offsetFactor=_useBlock.offsetFactor;var material=useRef();var last=state.top.current;useFrame(function(){var pages=state.pages,top=state.top;material.current.scale=lerp(material.current.scale,offsetFactor-top.current/((pages-1)*viewportHeight),0.1);material.current.shift=lerp(material.current.shift,(top.current-last)/shift*1.5,0.1);last=top.current;});return/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({ref:ref},props),{},{children:[/*#__PURE__*/_jsx(\"planeBufferGeometry\",{args:args}),/*#__PURE__*/_jsx(\"customMaterial\",{ref:material,color:color,map:map,transparent:true,opacity:opacity})]}));});export default Plane;","map":{"version":3,"sources":["/Users/sergey/code/grow/pres2/src/components/Plane.js"],"names":["React","forwardRef","useRef","useFrame","lerp","useBlock","state","Plane","ref","color","shift","opacity","args","map","props","viewportHeight","offsetFactor","material","last","top","current","pages","scale"],"mappings":"gTAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,KAA0C,OAA1C,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAO,kBAAP,CACA,OAASC,QAAT,KAAyB,WAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,C,wFAEA,GAAMC,CAAAA,KAAK,cAAGN,UAAU,CAAC,cAAmEO,GAAnE,CAA2E,qBAAxEC,KAAwE,CAAxEA,KAAwE,qBAAhE,OAAgE,4BAAvDC,KAAuD,CAAvDA,KAAuD,qBAA/C,CAA+C,8BAA5CC,OAA4C,CAA5CA,OAA4C,uBAAlC,CAAkC,cAA/BC,IAA+B,MAA/BA,IAA+B,CAAzBC,GAAyB,MAAzBA,GAAyB,CAAjBC,KAAiB,0CAClG,cAAyCT,QAAQ,EAAjD,CAAQU,cAAR,WAAQA,cAAR,CAAwBC,YAAxB,WAAwBA,YAAxB,CACA,GAAMC,CAAAA,QAAQ,CAAGf,MAAM,EAAvB,CACA,GAAIgB,CAAAA,IAAI,CAAGZ,KAAK,CAACa,GAAN,CAAUC,OAArB,CACAjB,QAAQ,CAAC,UAAM,CACb,GAAQkB,CAAAA,KAAR,CAAuBf,KAAvB,CAAQe,KAAR,CAAeF,GAAf,CAAuBb,KAAvB,CAAea,GAAf,CACAF,QAAQ,CAACG,OAAT,CAAiBE,KAAjB,CAAyBlB,IAAI,CAACa,QAAQ,CAACG,OAAT,CAAiBE,KAAlB,CAAyBN,YAAY,CAAGG,GAAG,CAACC,OAAJ,EAAe,CAACC,KAAK,CAAG,CAAT,EAAcN,cAA7B,CAAxC,CAAsF,GAAtF,CAA7B,CACAE,QAAQ,CAACG,OAAT,CAAiBV,KAAjB,CAAyBN,IAAI,CAACa,QAAQ,CAACG,OAAT,CAAiBV,KAAlB,CAA0B,CAACS,GAAG,CAACC,OAAJ,CAAcF,IAAf,EAAuBR,KAAxB,CAAiC,GAA1D,CAA+D,GAA/D,CAA7B,CACAQ,IAAI,CAAGC,GAAG,CAACC,OAAX,CACD,CALO,CAAR,CAMA,mBACE,0CAAM,GAAG,CAAEZ,GAAX,EAAoBM,KAApB,6BACE,4BAAqB,IAAI,CAAEF,IAA3B,EADF,cAEE,uBAAgB,GAAG,CAAEK,QAArB,CAA+B,KAAK,CAAER,KAAtC,CAA6C,GAAG,CAAEI,GAAlD,CAAuD,WAAW,KAAlE,CAAmE,OAAO,CAAEF,OAA5E,EAFF,IADF,CAMD,CAhBuB,CAAxB,CAkBA,cAAeJ,CAAAA,KAAf","sourcesContent":["import React, { forwardRef, useRef } from \"react\"\nimport { useFrame } from \"@react-three/fiber\"\nimport lerp from \"lerp\"\nimport \"./CustomMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst Plane = forwardRef(({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }, ref) => {\n  const { viewportHeight, offsetFactor } = useBlock()\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n    material.current.shift = lerp(material.current.shift, ((top.current - last) / shift) * 1.5, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh ref={ref} {...props}>\n      <planeBufferGeometry args={args} />\n      <customMaterial ref={material} color={color} map={map} transparent opacity={opacity} />\n    </mesh>\n  )\n})\n\nexport default Plane\n"]},"metadata":{},"sourceType":"module"}