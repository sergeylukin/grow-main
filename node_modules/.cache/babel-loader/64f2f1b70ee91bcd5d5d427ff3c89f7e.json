{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { applyMixins, cloneObj, forEach, has, isEmpty, map, toFastProperties, values } from \"../../utils/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider } from \"../errors_public\";\nimport { resolveGrammar, validateGrammar } from \"../grammar/gast/gast_resolver_public\";\nimport { Recoverable } from \"./traits/recoverable\";\nimport { LooksAhead } from \"./traits/looksahead\";\nimport { TreeBuilder } from \"./traits/tree_builder\";\nimport { LexerAdapter } from \"./traits/lexer_adapter\";\nimport { RecognizerApi } from \"./traits/recognizer_api\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine\";\nimport { ErrorHandler } from \"./traits/error_handler\";\nimport { ContentAssist } from \"./traits/context_assist\";\nimport { GastRecorder } from \"./traits/gast_recorder\";\nimport { PerformanceTracer } from \"./traits/perf_tracer\";\nexport var END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport var DEFAULT_PARSER_CONFIG = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n});\nexport var DEFAULT_RULE_CONFIG = Object.freeze({\n  recoveryValueFunc: function recoveryValueFunc() {\n    return undefined;\n  },\n  resyncEnabled: true\n});\nexport var ParserDefinitionErrorType;\n\n(function (ParserDefinitionErrorType) {\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\n\nexport function EMPTY_ALT(value) {\n  if (value === void 0) {\n    value = undefined;\n  }\n\n  return function () {\n    return value;\n  };\n}\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser(tokenVocabulary, config) {\n    this.definitionErrors = [];\n    this.selfAnalysisDone = false;\n    var that = this;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n\n    if (has(config, \"ignoredIssues\")) {\n      throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" + \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" + \"For further details.\");\n    }\n\n    this.skipValidations = has(config, \"skipValidations\") ? config.skipValidations : DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n\n\n  Parser.performSelfAnalysis = function (parserInstance) {\n    throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" + \"\\t\\nUse the **instance** method with the same name instead.\");\n  };\n\n  Parser.prototype.performSelfAnalysis = function () {\n    var _this = this;\n\n    this.TRACE_INIT(\"performSelfAnalysis\", function () {\n      var defErrorsMsgs;\n      _this.selfAnalysisDone = true;\n      var className = _this.className;\n\n      _this.TRACE_INIT(\"toFastProps\", function () {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        toFastProperties(_this);\n      });\n\n      _this.TRACE_INIT(\"Grammar Recording\", function () {\n        try {\n          _this.enableRecording(); // Building the GAST\n\n\n          forEach(_this.definedRulesNames, function (currRuleName) {\n            var wrappedRule = _this[currRuleName];\n            var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            var recordedRuleGast = undefined;\n\n            _this.TRACE_INIT(currRuleName + \" Rule\", function () {\n              recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n            });\n\n            _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          _this.disableRecording();\n        }\n      });\n\n      var resolverErrors = [];\n\n      _this.TRACE_INIT(\"Grammar Resolving\", function () {\n        resolverErrors = resolveGrammar({\n          rules: values(_this.gastProductionsCache)\n        });\n\n        _this.definitionErrors.push.apply(_this.definitionErrors, resolverErrors); // mutability for the win?\n\n      });\n\n      _this.TRACE_INIT(\"Grammar Validations\", function () {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (isEmpty(resolverErrors) && _this.skipValidations === false) {\n          var validationErrors = validateGrammar({\n            rules: values(_this.gastProductionsCache),\n            maxLookahead: _this.maxLookahead,\n            tokenTypes: values(_this.tokensMap),\n            errMsgProvider: defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          });\n\n          _this.definitionErrors.push.apply(_this.definitionErrors, validationErrors); // mutability for the win?\n\n        }\n      }); // this analysis may fail if the grammar is not perfectly valid\n\n\n      if (isEmpty(_this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (_this.recoveryEnabled) {\n          _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n            var allFollows = computeAllProdsFollows(values(_this.gastProductionsCache));\n            _this.resyncFollows = allFollows;\n          });\n        }\n\n        _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n          _this.preComputeLookaheadFunctions(values(_this.gastProductionsCache));\n        });\n      }\n\n      if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING && !isEmpty(_this.definitionErrors)) {\n        defErrorsMsgs = map(_this.definitionErrors, function (defError) {\n          return defError.message;\n        });\n        throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\n      }\n    });\n  }; // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n\n\n  Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n  return Parser;\n}();\n\nexport { Parser };\napplyMixins(Parser, [Recoverable, LooksAhead, TreeBuilder, LexerAdapter, RecognizerEngine, RecognizerApi, ErrorHandler, ContentAssist, GastRecorder, PerformanceTracer]);\n\nvar CstParser =\n/** @class */\nfunction (_super) {\n  __extends(CstParser, _super);\n\n  function CstParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = DEFAULT_PARSER_CONFIG;\n    }\n\n    var _this = this;\n\n    var configClone = cloneObj(config);\n    configClone.outputCst = true;\n    _this = _super.call(this, tokenVocabulary, configClone) || this;\n    return _this;\n  }\n\n  return CstParser;\n}(Parser);\n\nexport { CstParser };\n\nvar EmbeddedActionsParser =\n/** @class */\nfunction (_super) {\n  __extends(EmbeddedActionsParser, _super);\n\n  function EmbeddedActionsParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = DEFAULT_PARSER_CONFIG;\n    }\n\n    var _this = this;\n\n    var configClone = cloneObj(config);\n    configClone.outputCst = false;\n    _this = _super.call(this, tokenVocabulary, configClone) || this;\n    return _this;\n  }\n\n  return EmbeddedActionsParser;\n}(Parser);\n\nexport { EmbeddedActionsParser };","map":{"version":3,"mappings":"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","names":["applyMixins","cloneObj","forEach","has","isEmpty","map","toFastProperties","values","computeAllProdsFollows","createTokenInstance","EOF","defaultGrammarValidatorErrorProvider","defaultParserErrorProvider","resolveGrammar","validateGrammar","Recoverable","LooksAhead","TreeBuilder","LexerAdapter","RecognizerApi","RecognizerEngine","ErrorHandler","ContentAssist","GastRecorder","PerformanceTracer","END_OF_FILE","NaN","Object","freeze","DEFAULT_PARSER_CONFIG","recoveryEnabled","maxLookahead","dynamicTokensEnabled","outputCst","errorMessageProvider","nodeLocationTracking","traceInitPerf","skipValidations","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","ParserDefinitionErrorType","EMPTY_ALT","value","tokenVocabulary","config","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","Error","Parser","parserInstance","TRACE_INIT","defErrorsMsgs","_this","selfAnalysisDone","className","enableRecording","definedRulesNames","currRuleName","wrappedRule","originalGrammarAction","recordedRuleGast","undefined","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","rules","definitionErrors","push","apply","validationErrors","tokenTypes","tokensMap","errMsgProvider","grammarName","allFollows","resyncFollows","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","defError","message","join","__extends","configClone"],"sourceRoot":"","sources":["../../../../src/parse/parser/parser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}