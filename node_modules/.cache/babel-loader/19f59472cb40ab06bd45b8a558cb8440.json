{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { contains } from \"../utils/utils\";\nvar MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nvar NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nvar EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nvar NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nvar RECOGNITION_EXCEPTION_NAMES = [MISMATCHED_TOKEN_EXCEPTION, NO_VIABLE_ALT_EXCEPTION, EARLY_EXIT_EXCEPTION, NOT_ALL_INPUT_PARSED_EXCEPTION];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES); // hacks to bypass no support for custom Errors in javascript/typescript\n\nexport function isRecognitionException(error) {\n  // can't do instanceof on hacked custom js exceptions\n  return contains(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\n\nvar RecognitionException =\n/** @class */\nfunction (_super) {\n  __extends(RecognitionException, _super);\n\n  function RecognitionException(message, token) {\n    var _newTarget = this.constructor;\n\n    var _this = _super.call(this, message) || this;\n\n    _this.token = token;\n    _this.resyncedTokens = []; // fix prototype chain when typescript target is ES5\n\n    Object.setPrototypeOf(_this, _newTarget.prototype);\n    /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_this, _this.constructor);\n    }\n\n    return _this;\n  }\n\n  return RecognitionException;\n}(Error);\n\nvar MismatchedTokenException =\n/** @class */\nfunction (_super) {\n  __extends(MismatchedTokenException, _super);\n\n  function MismatchedTokenException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n\n    _this.previousToken = previousToken;\n    _this.name = MISMATCHED_TOKEN_EXCEPTION;\n    return _this;\n  }\n\n  return MismatchedTokenException;\n}(RecognitionException);\n\nexport { MismatchedTokenException };\n\nvar NoViableAltException =\n/** @class */\nfunction (_super) {\n  __extends(NoViableAltException, _super);\n\n  function NoViableAltException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n\n    _this.previousToken = previousToken;\n    _this.name = NO_VIABLE_ALT_EXCEPTION;\n    return _this;\n  }\n\n  return NoViableAltException;\n}(RecognitionException);\n\nexport { NoViableAltException };\n\nvar NotAllInputParsedException =\n/** @class */\nfunction (_super) {\n  __extends(NotAllInputParsedException, _super);\n\n  function NotAllInputParsedException(message, token) {\n    var _this = _super.call(this, message, token) || this;\n\n    _this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    return _this;\n  }\n\n  return NotAllInputParsedException;\n}(RecognitionException);\n\nexport { NotAllInputParsedException };\n\nvar EarlyExitException =\n/** @class */\nfunction (_super) {\n  __extends(EarlyExitException, _super);\n\n  function EarlyExitException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n\n    _this.previousToken = previousToken;\n    _this.name = EARLY_EXIT_EXCEPTION;\n    return _this;\n  }\n\n  return EarlyExitException;\n}(RecognitionException);\n\nexport { EarlyExitException };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AAGA,IAAMC,0BAA0B,GAAG,0BAAnC;AACA,IAAMC,uBAAuB,GAAG,sBAAhC;AACA,IAAMC,oBAAoB,GAAG,oBAA7B;AACA,IAAMC,8BAA8B,GAAG,4BAAvC;AAEA,IAAMC,2BAA2B,GAAG,CAClCJ,0BADkC,EAElCC,uBAFkC,EAGlCC,oBAHkC,EAIlCC,8BAJkC,CAApC;AAOAE,MAAM,CAACC,MAAP,CAAcF,2BAAd,E,CAEA;;AACA,OAAM,SAAUG,sBAAV,CAAiCC,KAAjC,EAA6C;AACjD;AACA,SAAOT,QAAQ,CAACK,2BAAD,EAA8BI,KAAK,CAACC,IAApC,CAAf;AACD;;AAED;AAAA;AAAA;AACUC;;AAKR,gCAAsBC,OAAtB,EAA8CC,KAA9C,EAA2D;;;AAA3D,gBACEC,kBAAMF,OAAN,KAAc,IADhB;;AAA8CG;AAF9CA,2BAAiB,EAAjB,CAE2D,CAGzD;;AACAT,UAAM,CAACU,cAAP,CAAsBD,KAAtB,EAA4BE,WAAWC,SAAvC;AAEA;;AACA,QAAIC,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,WAAK,CAACC,iBAAN,CAAwBL,KAAxB,EAA8BA,KAAI,CAACM,WAAnC;AACD;;;AACF;;AACH;AAjBA,EACUF,KADV;;AAmBA;AAAA;AAAA;AAA8CR;;AAC5C,oCAAYC,OAAZ,EAA6BC,KAA7B,EAAmDS,aAAnD,EAAwE;AAAxE,gBACER,kBAAMF,OAAN,EAAeC,KAAf,KAAqB,IADvB;;AAAmDE;AAEjDA,SAAI,CAACL,IAAL,GAAYT,0BAAZ;;AACD;;AACH;AALA,EAA8CsB,oBAA9C;;;;AAOA;AAAA;AAAA;AAA0CZ;;AACxC,gCAAYC,OAAZ,EAA6BC,KAA7B,EAAmDS,aAAnD,EAAwE;AAAxE,gBACER,kBAAMF,OAAN,EAAeC,KAAf,KAAqB,IADvB;;AAAmDE;AAEjDA,SAAI,CAACL,IAAL,GAAYR,uBAAZ;;AACD;;AACH;AALA,EAA0CqB,oBAA1C;;;;AAOA;AAAA;AAAA;AAAgDZ;;AAC9C,sCAAYC,OAAZ,EAA6BC,KAA7B,EAA0C;AAA1C,gBACEC,kBAAMF,OAAN,EAAeC,KAAf,KAAqB,IADvB;;AAEEE,SAAI,CAACL,IAAL,GAAYN,8BAAZ;;AACD;;AACH;AALA,EAAgDmB,oBAAhD;;;;AAOA;AAAA;AAAA;AAAwCZ;;AACtC,8BAAYC,OAAZ,EAA6BC,KAA7B,EAAmDS,aAAnD,EAAwE;AAAxE,gBACER,kBAAMF,OAAN,EAAeC,KAAf,KAAqB,IADvB;;AAAmDE;AAEjDA,SAAI,CAACL,IAAL,GAAYP,oBAAZ;;AACD;;AACH;AALA,EAAwCoB,oBAAxC","names":["contains","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","Object","freeze","isRecognitionException","error","name","__extends","message","token","_super","_this","setPrototypeOf","_newTarget","prototype","Error","captureStackTrace","constructor","previousToken","RecognitionException"],"sourceRoot":"","sources":["../../../src/parse/exceptions_public.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}